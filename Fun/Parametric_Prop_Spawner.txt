#Created by Teh Lawler (https://github.com/David-Parker/Gmod)
@name Parametric Prop Spawner
@inputs 
@outputs 
@persist Target:entity Size I Origin:vector Offset Num End Radius Ang R G B
@trigger 

interval(300) 
function void prop_spawner(Pos:vector) {
    Spawn = propSpawn("models/hunter/blocks/cube05x05x05.mdl",1)
    Spawn:setPos(Pos)
    Spawn:setColor(vec(R,G,B))
    
    # Really bad rainbow logic
    #Start R = 255 B = 0 G = 0
    B+=4 # Move from red to purple
    if(B >= 255){
        G+=4 # Move to cyan
        R-=4
    }
    if(G >= 255) { 
        B-=8 # Move toward pure green
    }
    if(B <= 50) {
        R+=8 # Finish with yellow
    }
    # Comment this section for mono-chromatic schemes
        
}

function vector circle_graph() {
    X = Radius*cos(Offset*I)
    Y = Radius*sin(Offset*I)
    Z = 0
    Vec = vec(X,Y,Z)
    return Vec
}

function vector saddle_graph() {
    X = Radius*cos(Offset*I)
    Y = Radius*sin(Offset*I)
    Z = (10*sin(Offset*I))*(10*sin(Offset*I))
    Vec = vec(X,Y,Z)
    return Vec
}

function vector helix_graph() {
    X = Radius*cos(Offset*I)
    Y = Radius*sin(Offset*I)
    Z = (Offset*I)/2
    Vec = vec(X,Y,Z)*2
    return Vec
}

function vector ring_graph() {
    # Num = 300, Radius = 200 for best results
    T = I
    I = I*(Offset*3)
    X = (Radius)*cos(I)
    Y = (I*sin(I+1) - I/9)/2
    Z = Radius*sin(I)
    Vec = vec(X,Y,Z)
    I = T
    return Vec  
}

if(first()| duped()) {
    entity():setAlpha(10)
    R = 255
    B = 0
    G = 255
    Ang = 0
    Size = 5
    Radius = 200
    I = 0
    Num = 300 # Should be even
    Offset = 360/Num
    End = Offset*Num
    Origin = entity():pos() + vec(0,0,200)
}

if(I < Num) {
    prop_spawner(Origin + ring_graph())
    I++
}
